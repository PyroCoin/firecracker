import hashlib
import json
from time import time
from urllib.parse import urlparse
from uuid import uuid4

import requests
from flask import Flask, jsonify, request

class BlockChain(object):
    def __init__(self):
        self.chain = []
        self.currentTransactions = []

        self.newBlock(previousHash=1, proof=100)
        #Creates the genesis block

    def newBlock(self, proof, previousHash=None):
        '''
        Adds a block
        uses the following:

        proof = The integer generated by the proof of work 
        previousHash = the hash of the previous block, an optional value 

        '''
        block = {
            'index': len(self.chain),
            'timestamp': time(),
            'proof': proof,
            'previousHash': previous_hash or self.hash(self.chain[-1])
            'transactions': self.currentTransactions


        }
        #Block Headers!
        self.currentTransactions = []
        #Resets the current transactions for the new block

        self.chain.append(block)
        #adds the block to the chain

        return(block)


    def newTransaction(self, sender, recipient, amount):
        '''
        Creates a new transaction waiting to be added to the next block. 
        Each new transaction includes the following data:

        Sender: the address of the sender
        Recipient: the adress of the person who is on the recieving end of the transaction
        amount: the amount of money sent 
        '''
        
        self.currentTransactions.append({

            'sender': sender,
            'recipient': recipient
            'amount': amount

            })

            return self.lastBlock['index'] + 1
    
    @property
    def lastBlock(self):
        #returns the last block, creating a blockchain
        return self.chain[-1]
    
    @staticmethod
    def hash(block):
        '''Hashes the block using SHA256'''
        
        blockString = json.dumps(block, sort_keys=True).encode()
        return hashlib.sha256(blockString).hexdigest()




''' 
This class essentially creates the actual chain
'''